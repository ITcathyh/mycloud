<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hyh.dao.UserDao" >
  <resultMap id="BaseResultMap" type="hyh.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="invitationid" property="invitationid" jdbcType="BIGINT" />
    <result column="surplus" property="surplus" jdbcType="TINYINT" />
    <result column="points" property="points" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email, password, name, qq, invitationid, surplus, points
  </sql>

  <select id="getById" resultMap="BaseResultMap" >
  select
  <include refid="Base_Column_List" />
  from user
  where id = #{id,jdbcType=BIGINT}
</select>

  <select id="getAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
  </select>

  <select id="getByInvitid" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
    where invitationid = #{invitationid}
  </select>

  <select id="getByEmailAndPassword" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
    where email = #{email} and password = #{password}
  </select>

  <delete id="deleteById">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="add" parameterType="hyh.entity.User"  useGeneratedKeys="true" keyProperty="id">
    insert into user (id, email, password,
      name, qq, invitationid,
      surplus, points)
    values (#{id,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{invitationid,jdbcType=BIGINT},
      #{surplus,jdbcType=TINYINT}, #{points,jdbcType=TINYINT})
  </insert>

  <update id="update" parameterType="hyh.entity.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      surplus = #{surplus,jdbcType=TINYINT},
      points = #{points,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="isExist" resultType="Integer">
    select count(*) from user
    where email = #{email} limit 1
  </select>
</mapper>